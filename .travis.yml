---
stages:
  - name: "lint"
  - name: "test"
  - name: "deploy-github"
    if: "tag IS present"
  - name: "deploy-pypi"
    if: "tag IS present"

language: "python"
python:
  - "3.6"
  - "3.7"
  - "3.8"

env:
  # Each version of Nautobot listed here must have a corresponding directory/configuration file
  # under development/nautobot_<NAUTOBOT_VER>/configuration.py
  matrix:
    - "INVOKE_NAUTOBOT_CIRCUIT_MAINTENANCE_NAUTOBOT_VER=1.0.0"
# Add your encrypted secret below, you can encrypt secret using "travis encrypt"
# https://docs.travis-ci.com/user/environment-variables/#defining-encrypted-variables-in-travisyml
# global:
#   secure: <Add encrypted token>
services:
  - "docker"
# --------------------------------------------------------------------------
# Tests
# --------------------------------------------------------------------------
before_script:
  - "pip install invoke docker-compose"
  - "curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py > /tmp/get-poetry.py"
  - "python /tmp/get-poetry.py -y --version 1.1.6"
  - "source $HOME/.poetry/env"
  - "cp development/creds.example.env development/creds.env"

script:
  - "INVOKE_NAUTOBOT_CIRCUIT_MAINTENANCE_PYTHON_VER=$TRAVIS_PYTHON_VERSION invoke build --no-cache"
  - "INVOKE_NAUTOBOT_CIRCUIT_MAINTENANCE_PYTHON_VER=$TRAVIS_PYTHON_VERSION invoke tests --failfast"

jobs:
  include:
    - stage: "lint"
      before_script:
        - "pip install invoke toml docker-compose"
        - "cp development/creds.example.env development/creds.env"
        - "INVOKE_NAUTOBOT_CIRCUIT_MAINTENANCE_PYTHON_VER=$TRAVIS_PYTHON_VERSION invoke build --no-cache"
      script:
        - "invoke black"
        - "invoke bandit"
        - "invoke pydocstyle"
        - "invoke flake8"
        - "invoke yamllint"
        - "invoke pylint"

    - stage: "deploy-github"
      before_script:
        - "pip install poetry"
      script:
        - "poetry version $TRAVIS_TAG"
        - "poetry build"
      deploy:
        provider: "releases"
        api_key: "$GITHUB_AUTH_TOKEN"
        file_glob: true
        file: "dist/*"
        skip_cleanup: true
        "on":
          tags: true
          branch: "main"
          python: 3.7

    - stage: "deploy-pypi"
      before_script:
        - "pip install poetry"
      script:
        - "poetry version $TRAVIS_TAG"
        - "poetry build"
      deploy:
        provider: "pypi"
        username: "__token__"
        password: "$PYPI_TOKEN"
        "on":
          tags: true
          branch: "main"
          python: 3.7
