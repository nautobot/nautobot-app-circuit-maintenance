[tool.poetry]
name = "nautobot-circuit-maintenance"
version = "2.0.0"
description = "Nautobot plugin to automatically handle Circuit Maintenances Notifications"
authors = ["Network to Code, LLC <opensource@networktocode.com>"]
license = "Apache-2.0"
readme = "README.md"
homepage = "https://github.com/nautobot/nautobot-plugin-circuit-maintenance"
repository = "https://github.com/nautobot/nautobot-plugin-circuit-maintenance"
keywords = ["nautobot", "nautobot-plugin"]
classifiers = [
    "Intended Audience :: Developers",
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
]
include = [
    "LICENSE",
    "README.md",
]
packages = [
    { include = "nautobot_circuit_maintenance" },
]

[tool.poetry.dependencies]
bs4 = "^0.0.1"
circuit-maintenance-parser = "^2.0.0"
django-cryptography = "^1.1"
google-api-python-client = "^2.9.0"
google-auth-httplib2 = "^0.1.0"
google-auth-oauthlib = "^0.5.0"
markdown = "!=3.3.5"  # Added due an issue with Markdown 3.3.5
nautobot = "^2.0.0"  # Used for local development
nautobot-capacity-metrics = {version = ">=3.0.0", optional = true }
python = ">=3.8, <3.12"

[tool.poetry.group.dev.dependencies]
Markdown = "*"
bandit = "*"
black = "*"
coverage = "*"
django-debug-toolbar = "*"
flake8 = "*"
invoke = "*"
ipython = "*"
mkdocs = "1.5.2"
mkdocs-material = "9.1.15"
mkdocs-version-annotations = "1.0.0"
mkdocstrings = "0.22.0"
mkdocstrings-python = "1.5.2"
parameterized = "*"
pydocstyle = "*"
pylint = "*"
pylint-django = "*"
pylint-nautobot = "*"
toml = "*"
towncrier = "~22.8.0"
yamllint = "*"

[tool.black]
line-length = 120
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
  )/
  | settings.py     # This is where you define files that should not be stylized by black
                     # the root of the project
)
'''

[tool.pylint.master]
# Include the pylint_django plugin to avoid spurious warnings about Django patterns
load-plugins="pylint_django, pylint_nautobot"

# Ignore migrations and tests
ignore = ".venv,.*/tests/*,.*/migrations/*"

# Don't raise alarms if args/kwargs has an issue, as may be required, just as a decorator
ignored-argument-names="args|kwargs"

[tool.pylint.basic]
# No docstrings required for private methods (Pylint default), or for test_ functions, or for inner Meta classes.
no-docstring-rgx="^(_|test_|Meta$)"

[tool.pylint.messages_control]
# Line length is enforced by Black, so pylint doesn't need to check it.
# Pylint and Black disagree about how to format multi-line arrays; Black wins.
disable = """,
    line-too-long,
    too-few-public-methods,
    duplicate-code,
    too-many-ancestors,
    useless-option-value,
    """

[tool.pylint.miscellaneous]
# Don't flag TODO as a failure, let us commit with things that still need to be done in the code
notes = """,
    FIXME,
    XXX,
    """

[tool.pylint-nautobot]
supported_nautobot_versions = [
    "2.0.0"
]

[tool.pydocstyle]
convention = "google"
inherit = false
match = "(?!__init__).*\\.py"
match-dir = "(?!tests|migrations|development)[^\\.].*"
# D212 is enabled by default in google convention, and complains if we have a docstring like:
# """
# My docstring is on the line after the opening quotes instead of on the same line as them.
# """
# We've discussed and concluded that we consider this to be a valid style choice.
add_ignore = "D212"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.towncrier]
package = "nautobot_circuit_maintenance"
directory = "changes"
filename = "docs/admin/release_notes/version_2.0.md"
template = "development/towncrier_template.j2"
start_string = "<!-- towncrier release notes start -->"
issue_format = "[#{issue}](https://github.com/nautobot/nautobot-plugin-circuit-maintenance/issues/{issue})"

[tool.towncrier.fragment.added]
[tool.towncrier.fragment.changed]
[tool.towncrier.fragment.deprecated]
[tool.towncrier.fragment.fixed]
[tool.towncrier.fragment.removed]
[tool.towncrier.fragment.security]
